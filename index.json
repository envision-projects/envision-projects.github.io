[{"body":"Craft cert info goes here\n","link":"/craft/","section":"craft","title":"Craft Certification"},{"body":"Nothing here yet.\nAdding some stuff to testklkglsfjfljdksjfkls\n","link":"/electrical/","section":"electrical","title":"Electrical Certification"},{"body":"Embedded Systems are combinations of hardware and software that are built for a specific purpose in mind, as opposed to personal computers which are more general use. Common examples include smartwatches, home sensor arrays, Bluetooth headphones, even microwaves and refrigerators; they are nearly ubiquitous in modern technology.\nThis course will direct the student through the design and implementation processes for creating their own custom embedded system.\nEach certified student will be proficient in\nMicrocontroller programming - an overview of common APIs such as Arduino and VSCode as well as basic programming skills in C++ Sensor integration - an understanding of common sensors, how they operate, and how to use them in a program Communication protocols (I2C/SPI) - proficiency in inter-chip communication for fast information transfer between sensors and microcontrollers Analog and digital data acquisition (ADC/DAC) - an understanding of how microcontrollers process analog signals, including bit depth, sample rate and how these affect data acquisition ","link":"/embedded/","section":"embedded","title":"Embedded Systems Certification"},{"body":"SolidWorks Software, 3D Printing, Post Processing, Laser Cutting, Enclosures and Assemblies, CNC Machine, Solid CAM, Motor/Servo Control, Finite Element Analysis, woodworking\nMechanical Design and Prototyping will focus on the process through which moving machines are created and built. Beginning with ideation in CAD software, this certification will cover all parts of the process, from idea to product. Much of the material will concentrate on modern fabrication tools.\nEach certified student will be proficient in:\nCAD Software - a working knowledge of 2D and 3D design software including Adobe Illustrator and Solidworks 3D Printing - an understanding of different 3D printing techniques, slicing software, and the functionality of 3D printers in general Laser Cutting - something about laser cutting, probably. Get Started! ","link":"/mechanical/","section":"mechanical","title":"Mechanical Design and Prototyping Certification"},{"body":"Just an example of an additional docs folder.\nSurprised that it doesn't have a left sidebar menu? Worry not; just follow this instructions to enable it.\nTutorials Back to docs ","link":"/tutorials/","section":"tutorials","title":"Tutorials' Docs"},{"body":" 1.1 Introduction\nPhysical circuits on a board are first built on paper in the form of a schematic diagram. Circuit design typically begins with a schematic, where components are chosen, nets are created, and the flow of signals determined. The PCB is then created by using the schematic as its primary reference. Building the PCB from the schematic and working with the two in tandem not only simplifies PCB layout, but also allows for better error checking, component selection, and overall workflow.\n1.2 Electrical Components\nA component is any part or piece that is attached to a circuit board. This includes:\nResistors Capacitors Light Emitting Diode (LED) Transistors Inductors Integrated Circuit (IC) Circuit Breaker Fuse Switch Transformer Electrical Wires \u0026amp; Power Cables Battery Relay Motor ( https://www.dfliq.net/blog/the-basics-of-electrical-components/ )\n1.3 Schematic Symbols\n","link":"/electrical/schematic-design/","section":"electrical","title":"Schematic Design"},{"body":" Description: Build a rover vehicle that drives straight until it encounters an object that it must detect and drive away from (Like a small roomba!). This project can be made using a microcontroller of your choice, in this example I will use an adruino uno combined with an adafruit motor shield. This document will also be covering the basics of ultrasonic sensors as it is used for detecting objects within a specified distance. Designing the chassis in SolidWorks: Depending on the type of drive system you want (2-wheel or 4 wheel drive), create a new SolidWorks part that will house you motor, microservo, Arduino Uno, Adafruit Motor Shield, and battery pack.\n","link":"/mechanical/obstacle-avoidance-robot/","section":"mechanical","title":"Obstacle Avoidance Robot"},{"body":" Finite Element Analysis: SolidWorks\n1.1 Quick Introduction: Finite Element Analysis (FEA) is a powerful tool used by engineers to predict how parts and assemblies react to forces: heat, fluid flow, vibration, etc. Computer software such as SolidWorks, FEMAP, ANSYS, and Matlab use numerical analysis to create a general 3D mesh on the surface of the product and calculate stresses based on user-defined materials and forces. Note: Solidworks is not the most precise FEA software to use for engineering purposes, however, it is still accurate and is simple to use. Solidworks comes with a Simulation Advisor which is a helpful tool that walks you through the process. 1.2 Definitions and The Process: Definitions:\nFinite Elements: Discrete amount of shapes used to calculate the deformation of a part. They are connected together at nodes and are typically triangle shaped in SolidWorks.\nMesh: The culmination of all connected finite elements of a part perfectly dispered over the surface area of the part. A good mesh can determine the accuracy of your FEA. Von Mises Stress: Used to predict yielding from external stresses. Typically represented by red colors in FEA, yielding stress can occur at several different locations on a part depending on the load magnitude, direction, and location. The process for FEA goes as follows;\nDefine the reason for the study. You could possibly be concerned with:\nExcessive compression/expansion/deformation Temperatures Loading cycles Define the material being used\nCreate fixed geometries at certain locations\nApply loads at certain locations\nGenerate a mesh to your liking\nRun study\n2.1 Creating a Static Study in SolidWorks The rest of this tutorial will be explained using the part shown below:\nStart by going to the “Simulation” tab at the top of the screen and clicking “New Study”\nIn the Study, menu ensure that you check the Static box under General Simulation and click the green checkmark. 2.2 Applying Materials After you have made a new Study, click on Apply Material at the top of the screen. For this tutorial. we will be using 1023 Carbon Steel. Be aware that most materials you will ever need to analyze will be in this material library, however, you can add your own material be clicking the “Add…” button. When you’re done click “Apply”, this may slightly change the appearance of the material. You can confirm this by checking the features menu on the right side of the screen\n2.3 Creating Fixed Geometries Fixed Geometries can be points, edges, or faces on a part that will not move in a specified direction. In order to run a FEA you need to have at lease one point of fixed geometry. To do this click on the “Fixtures Advisor” in the top bar and then select “Fixed Geometry”. In this instance, we will create a fixed geometry at the faces shown below, note that fixed geometries are denoted by green arrows in SolidWorks.\n2.4 Applying External Forces External Forces can also be applied to points, edges, and faces on a part. Do this by going to the top bar and selecting “External Loads Advisor” and then clicking on “Force”.\nIn this instance, we will apply loads at the two faces shown below (Solidworks automatically points forces in the direction normal to the face of the part).\nTo change the direction of the force being applied, click the “Selected Direction” bubble and then select an axis or edge to bind it to. In this case, it will be in the vertical direction (Y-axis) so I clicked on a nearby edge that was also in the vertical direction. Solidworks also defaults to 1N of force but in this study the part will be under 500 N. (Proceed by clicking the green check mark)\n2.5 Generating a Mesh Solidworks automatically creates a mesh before a Static study is run. However you may want to view and change the resolution of this mesh in order to generate more accurate results with your study. Do this by going to “Run This Study” and clicking on “Create Mesh”.\nThis opens up a window that gives you options on how you want to create your mesh. Mesh Density changes the size of individual triangles depending on how Coarse or Fine you want your elements to be. In this case, we want the finest possible mesh. Mesh Parameters, when checked, allows you to manually input the maximum and minimum element sizes and gives you options for mesh curvatures. In this case we will just be using the “Standard mesh” option. Clicking the green check mark will tell Solidworks to create the modified mesh based on our new settings and parameters. The resulting mesh should look like this:\n2.6 Running the Study and Post Analysis The final step in the process is to run the study by clicking “Run This Study” in the top bar. Allow Solidworks some time to generate the results. Your part should now be visually deformed and new results should pop up in the feature menu. Solidworks automatically gives results for vonMises Stress, Displacement, and Strain. By right clicking on any of the results and clicking “Show”, Solidworks adds color to your part and highlights important areas of change. (This can also be done with a double-click)\nNote: The top left corner of the viewing space shows a “Deformation scale” number. This value is multiplied by the true deformation amount so that it is easier to see a difference in the model. Another Note: According to the von Mises stress chart here, this part has a Yield Strength of 2.827e+08 [N/m^2] and it looks like no sections of the part reach this limit (indicated in red) so, most likely, no yielding will occur under a load of 500 N based on this simple analysis.\nDeformation Scaling\nChanging the scale of deformation is simple. Right click wanted result and go to “Edit Definition”. In the Plot menu, head to the “Deformed shape” section, click “User Defined”, and input a deformation scale number below\nCreating a Deformation Animation\nSometimes it may be useful to see how your part will deform using a moving picture. To create an animation, right click on “Stress1” under “Results” and click on “Animate”.\nThis automatically creates an animation with a default of 5 frames. To make the animation smoother, stop the playback and type in a larger amount like 30. This will take longer to calculate but you will have a much smoother result.\n","link":"/tutorials/finite-element-analysis-solidworks/","section":"tutorials","title":"Finite Element Analysis: SolidWorks"},{"body":" PCB Layout:\n1.1 Introduction:\nPCB layout is a necessary part of electronics development. While breadboards and perfboards are fine for prototyping, fabrication and manufacturing for a production run require a fully functional and professional circuit board. There are several options regarding circuit design tools, but we will focus on three common ones: Eagle, KiCAD and Altium. While there are substantial differences between these programs, there are also many topics and practices that are ubiquitous across platforms. 1.2 Key Terms:\nTrace/Track - the wires that connect components on a circuit board\nTraces connecting through-hole components on a PCB\nVia - holes of various sizes that connect layers on a circuit board\nVias are shown with net and layer labels\nPolygon/Pour - an area of various shape and size made of copper, usually used as a ground plane\nThe above image shows a bottom layer polygon pour that serves as the ground plane\nIC - integrated circuit, or a chip\nThrough-hole - components whose legs go all the way through the pcb and are typically soldered by hand. This is as opposed to\nSurface-mount - components that are soldered to the top (or bottom) of the circuit board and do not traverse any layers.\nLayer - These make up the PCB “stack”. PCBs can be 1 to almost 100 layers, but are typically 2 to 8, in multiples of 2. A 2-layer board will have tracks and polygons on the top and bottom layers.\nThe typical layers are:\nSubstrate Layer - The substrate layer of any PCB is usually made from fiberglass, which gives the board its rigid form. Generally speaking, the majority of boards will have this material for their substrate, with the exception of flexible PCBs, which are built on flexible plastic such as Kapton. Substrate PCB layers can also be made with other materials such as epoxies, however they lack the durability that FR4 (found in fiberglass) provides for a high quality board. Copper Layer - Next is a thin layer of copper foil which is laminated to the board using heat. When we are speaking of different layered PCBs, we are referring to how many copper layers they consist of. If you are creating a single-sided PCB the circuit board has one layer of conducting material on one side of the board and the other side is used for incorporating different electronic components. Whereas double-sided PCBs can mount the conductive copper and components on both sides of the board, as opposed to just the one. These double-sided boards allow for closer routing traces as they can alternate between the top and bottom layers using vias. This can be very useful in many electronic products as the circuits on one side of the board can be connected to the other with the help of holes drilled into it. The thickness of the copper layer on your PCB will depend on the power the PCB needs to withstand. PCBs that need to handle very high power throughout may have a thicker copper layer than those that do not.\nSoldermask layer - Once the copper layer has been applied the soldermask layer is placed on top. This gives the PCB its green color and is used to insulate the copper layer to avoid any contact with any other metal or elements of the board that could disrupt the copper traces. This layer is also important for themanufacturing processwhere the components are soldered onto the board, as it helps the user to solder to the correct places.\nSilkscreen layer - The silkscreen is mainly for the purpose of us humans to help us better understand the board and the functionality of different pins or LEDs, by adding letters, numbers and symbols to the board.\nNet - a collection of pads and tracks that are all connected. No two different nets can be connected.\nHere every color represents a different net\n","link":"/electrical/pcb-layout/","section":"electrical","title":"PCB Layout"},{"body":" Solidworks Motion Study\nEnVision Maker Studio\n1.1 Introduction: Motion studies are graphical simulations of motion for assembly models. You can use Solidworks mates in an assembly to restrict the motion of components in an assembly when you model motion. Motion studies in Solidworks do not change the properties of an assembly model. Instead, if changes are made to the assembly after the creation of the motion study, the software will automatically update the study and reveal any possible conflicts. 1.2 MotionManager: The MotionManager is where you can find all of the core Solidworks tools used for motion analysis: Animation, Basic Motion, and Motion Analysis. This toolbar is by default found at the bottom of the screen, however, if you do not see anything there you may have to enable the add-in in the settings. To do this go to the top of the screen and click on the settings icon and click “Add-ins” from the pull down menu.\nFrom the “Add-ins” menu ensure that “SOLIDWORKS Motion” and “SOLIDWORKS Simulation” are checked before clicking on “OK”.\nAnimation 2.1 Animation Wizard: The Animation Wizard is a quick and easy way to create simple animations of the current assembly. This does not include the movement of parts defined by mates, rather it generates a simple rotation of the entire assembly based on the current camera position.\nIn the first pop-up window select “Rotate Model” and click Next.\nThe second pop-up window will ask you which direction to rate in, how many rotations, and which original axis you would like to rotate about (typically choose Y-axis).\nThe last pop-up menu will ask you when to begin the rotation and how long the rotation will last.\nThe Animation Wizard then generates camera keyframes marked as diamonds in the MotionManager. Before starting the animation, ensure the grey bar is at the “0 sec” mark. Clicking the play button will start the animation.\n2.2 More on Camera Keyframes: Instead of using the Animation Wizard to make keyframes, we can make our own camera keyframes based on our views in the Solidworks assembly window. First find a view in your Assembly window that you want to begin your animation on. Next locate and right-click on the first keyframe next to “Orientation and Camera Views”. Click on “Replace Key”, this changes the first camera view of the animation to be yor preffered starting view. Until you replace this key again, everytime you start the animation from the beginning it will return to this camera view. Bounce Animation: The easiest way to make camera keyframes is by click-holding onto the first keyframe and dragging it along the time line. This makes a copy of the original camera view but that can be changed by clicking “Replace Key”. First create two copies of the first keyframe and place them along the timeline like so: To create the Bounce animation, move the grey bar to be right on top of the middle keyframe. Next move the assembly to a second position that is different from the first. Finally right click on the middle keyframe and select “Replace Key”. Note: this process can be done with any keyframe you create on the camera timeline.\nThis will create a Bounce animation where the camera moves from Position 1 to Position 2 and then back to Position 1. You can also move around the keyframes to change the speed of the Bounce Animation to how you see fit.\n2.3 Motors: Motors can be used to manipulate a component for a certain amount of time as defined by a mate. In this tutorial you will animate a rotation along an axis but be aware that you can also create a linear oscilation along an edge/axis as well. Note: Create a new motion study quickly by right clicking your current “Motion Study” tab at the bottom of the screen and selecting “Create New Motion Study”\nTo create a Rotary Motor, first click on a circular edge to establish what direction and part that you want to move. The assembly mates will update based on the properties of the motor. Ensure that the motor you create has a red arrow indicating the direction of the motor which can be changed. The motion box gives you many options to control the motor including distance, oscillation, segments, etc. For this specific example, I will be using the Constant Speed option which will rotate the motor in one direction at 25 RPM. Clicking the graph at the bottom of the box allows you to more closely analyze the motion.\nAfter clicking the green checkmark, you will see a new Motion Study element created on top of all the model features. To see the motor move click the play button and allow Motion Study to calculate the frames. Note: You can recalculate frames whenever in motion study by clicking the Calculator Icon:\nAnimation Framerate Solidworks automatically sets the framerate of the animations to 8 FPS which creates a rather choppy viewing experience. Change this to a higher number in the animation settings menu Basic Motion Basic Motion is different from Animation as it takes into account the mass, inertia, gravity, and contacts to calculate motion more accurately. Animation simply uses interpolation provided by keyframes whereas Basic Motion is capable of creating more complex real-world simulations. Change to “Basic Motion” in the Motion Manger bar at the bottom of the screen. 3.1 Gravity: Gravity is a key tool to simulating motion in an assembly. Go to the right side of the Motion Manager bar and click on the falling apple symbol. Next, you have the option to choose the direction and magnitude of gravity in your assembly either based on a chosen edge/axis or one of the global axes. In this example, we will choose the global Y-axis and ensure the green arrow is pointed down.\n3.2 Contacts: Defining contact points/surfaces in a Motion Study is crucial to simulating real-world interactions. In Basic Motion, this works well with smooth surfaces that do not have many complicated rough edges. This button is just left of the gravity button.\nNote: You can create contact groups that simulate interactions between different sets of objects. In this example, however, we will only be using one set of contacts. Clicking on parts will highlight the entire surface and create contacts. Clicking on the Calculate button will run the simulation (Be sure to change the framerate to smooth out the animation)\n","link":"/tutorials/solidworks-motion-study/","section":"tutorials","title":"Motion Study: SolidWorks"},{"body":"test CMS\n","link":"/electrical/wipers/","section":"electrical","title":"wipers"},{"body":"Test netlifyCMS\nIn richtext, BOLD\nplain\n","link":"/electrical/pcb-design-with-kicad/","section":"electrical","title":"Pcb Design with KiCAD"},{"body":"Why 3d printing? 3d printing is one of the most important techniques in the lorem ipsum dolor sit\nyou can make things with 3d printers stuff and things Making objects stuff projects important information test addition for showcase another test addition from netlifyCMS 3d printers are hot, try not to burn yourself test\nResources Some potential resources you might find on the internet:\n","link":"/mechanical/3d-printing/","section":"mechanical","title":"3d Printing"},{"body":"About Omni Car Project By: MingWei Yeoh\nIt's a tank driven car with omni wheels for some sick drifting without the fear of shredding the floor! Combined with a responsive FLYSKY Drone Transmitter, this makes for a fun project!\nChallenges CAD The main gripe with the included motors in the kit is that they are a little slow. Thus we will be making a custom 1:2 speed gearbox with OnShape in order to speed up the drive wheels!\nAnswer Key Onshape Files Student copy of Onshape Files\nElectronics Electronics aren't that complicated. We use 3 wires to wire the drone receiver to the Arduino Mega and wire up all the motors to the Adafruit Motor shield. Some basic soldering of the header pins onto the Motor Shield is required.\nCode If not already, you should have a way to upload code to an Arduino (Arduino IDE, or Platform IO).\nInstall Arduino IDE\nOtherwise, the code is extremely basic and can be found in the omniwheelcar.ino file.\nMaterials 1.5\u0026quot; [Omni Wheels](38mm (1.5 inches) Double Plastic Omni Wheel with 8 PU Rollers – The Smallest Omni Wheel – 14184 – Oz Robotics) DAGU Robot [Adafruit motor Driver Shield](Motor Stepper Servo Shield 1438 Adafruit Industries | Jameco) Arduino Mega FLYSKY Transmitter \u0026amp; Reciever M3 Lock Nuts M4 Grub Screws [M3 Hobby Park Bushings](Redcat Racing 02101 C-hub Bushings King Pin Bushings 12pcs 02101 609132454745 | eBay) Assorted M3 Bolts Getting Familiarized with MAE Terms Bushing For spinning objects, it is good practice to use a bushing (Which is basically a cheap bearing) instead of simply spinning an object on a bolt. They are typically made of a low friction material like bronze.\nThrough Hole Hole that is meant for a bolt to pass through without interference. I usually use a value = (OD of bolt)\u0026quot; + 1/32\u0026quot;\nTap Hole Hole that is meant for a bolt to thread through it and essentially act like a nut (but without a nut, they're really convenient). It is important to understand that you can only use this with 3D Printing as the plastic will form it's own threads naturally. The pullout force is quite strong but it does not take much torque to strip the threads so you must be carefull of overtightening.\nI use a value of (OD of a bolt)\u0026quot; - 1/64\u0026quot;\nTolerance Anything that we 3D Printing to fit around something \u0026quot;snuggly\u0026quot; must have a little bit of tolerance on it. If we make a hole exactly the size of the motor shaft, it will probably not fit and be WAAAY too tight, therefore we add a little bit extra called Tolerance.\nThere is quite an easy way to achieve this.\nCopy over the geometry of the Motor Shaft (MS). Click on all of the lines and select \u0026quot;Construction\u0026quot; (Or press q on keyboard to toggle) Click on the offset button and offset it by 1/128\u0026quot; This new line will be the Actual geometry that you use to fix the part around the motor shaft. (This value works for my 3D printeres but your results may vary) Gears Gear Types There are different types of gears that we can 3D Print!\nSpur Gear (Left)\nHelical Gear (Middle)\nHerringbone Gear (Right)\nSpur Gear You are probably most used to the gear on the left, that's because they are easy to make and generally the least pain in the ass to use.\nSome disadvantages of them include that you have to constrain the gears in the axial direction. They can slide off each other unless you prevent that from happening with another part. They also make anonying noises because there is not a consistent mating between the two faces that happen.\nHelical Gears These fix the inconsistent mating problem with spur gears but because they are angled, they introduce their own problem of the gears themself wanting to push each other off of the axle. They create their own axial force lol. Cars use helical gears in their gearbox.\nHerringbone Gears They are the best gears because of their coolness. They are basically helical gears mirrored against each other to form a herringbone gears. The axial force formed by the angled teeth cancel each other, which therefore makes no axial load. Additionally, they are self-aligning, they will literally \u0026quot;snap\u0026quot; into place and hold themself from sliding off one another.\nYou probably have never seen these gears in the real world because they are really hard to produce and most of the time you can get away with just a spur gear. 3D printers are like the only machine that can produce herringbone gears so you better take advantage of these cool things.\nPitch diameter The Pitch Diameter tells the mating distance for the gear and is crucial when you're making a gearbox. Like how else would you know the distance to where you should put the other end of the shaft??\nLayout sketch This will be the most important when making the Gearbox plate. This will allow us to let **CAD **find out the positions FOR US for all of our axles. In my layout sketch example:\nThe Pitch Diameters (PD) of both of the gears have a tangent relation to each other. I have drawn the wheel coaxially with it's respective gear to allow me to dimension how much ground clearance I want to have between the bottom of the Motor Pinion gear and the ground (Brown exclamation mark) CAD design Onshape File \u0026amp; Gear Setup Make a copy of Student copy of Onshape Files Open the file and click on the \u0026quot;+\u0026quot; button in the top-right corner to add a custom feature Under \u0026quot;public\u0026quot; search for \u0026quot;Advanced Gear\u0026quot; Add that featurescript to your toolbar Roadmap We will need to create 3 parts specifically in this order:\nMotor Pinion Gear Will have Gear Teeth and a form of coupler to the shaft of the motor Wheel Gear Have Gear Teeth and a form of coupler to the hub of the 1/5\u0026quot; Omni Wheel Needs to have 1/2 the number of Gear Teeth that the Motor Pinion Gear has Gearbox Plate This will hold attach the gear on the wheel to the chassis of the robot and most importantly will ensure a correct amount of spacing between the gears Creating the Motor Pinion Gear Creat new Part Studio Click on Advanced Gear in the top-right corner (The plugin you should've installed) On the window that pops up, change from \u0026quot;Module\u0026quot; to \u0026quot;Diametrical Pitch\u0026quot; Set the Number of gear teeth to 24 Set the Diametrical pitch to 25 Pitch Diameter = Number of Teeth / Diametrical Pitch Diametrical Pitch relates to the density and size of the gear teeth Change the type from \u0026quot;Spur\u0026quot; to Herringbone Set Pressure Angle to 30 ( Just some number that I found that works well for 3D Printing) Set Extrude Depth to 0.25\u0026quot; Hit the check box. Now it's up to you to attach this gear to the motor shaft!\nMake sure to reference the reference motor in the part studio. It is under one of the tabs at the bottom of the screen. Reference the dimensions for the motor shaft and be sure to add tolerance! In order to \u0026quot;secure\u0026quot; the gear pinion to the motor you should use a grub screw! Simply make a tap hole that goes straight into the shaft Creating the Wheel Gear First we need to understand how this is all going to go together.\nThe part that we're going to make must have room for the **bushing **on the end of it and also fit inside of our omni wheel.\nThe idea is that the wheel spins on a long bolt. A lock nut on the end of our wheel-gear assembly keeps everything tight and the entire bolt threads into the gearbox plate that we will make next.\nCreate a new part studio Make a new gear with: The Half the number of teeth as the first gear The SAME DIAMERTICAL PITCH (for some reason the DP changes whenever you change the teeth number, so just be aware of that) The same type of gear as the first one (herringbone, spur, or helical whatever you choose) 0.25\u0026quot; thick 30 degree Pressure Angle Add a coupling method to the Omni Wheel. With enough spacing so that the gear teeth are not in contact with the wheel Through hole for the bushing to fit into Creating the Gearbox Plate This plate attaches the wheel axle to the chassis assembly. We will use the mounting holes on the gearbox as an easy way to attach the plate.\nLayout sketch making Switch to the DAGU DGO2S Motor Gearbox tab. We will make our part directly on the gearbox since we will be referencing items on the gearbox. Create a new sketch on the face of the motor Project the gearbox holes onto the current sketch. Turn the holes into construction lines Rename your sketch to be titled \u0026quot;Layout Sketch\u0026quot; Close out the sketch. Referencing pitch diameters Have you noticed the faint sketch line on the gearbox gears? If you don't notice it you may have the gear feature hidden.\nThe circle is telling you the pitch diameter for your gears. Take note of both of the pitch diameters for your motor pinion and the wheel gear\nGo back to the gearbox tab and edit the layout sketch Add in the construction circles and dimension them so that they represent the pitch diameters of your gears Add in a circle that represents the wheel (1.5\u0026quot; in diameter) Add in another dimenion that ensures the robot with have 1/4\u0026quot; of ground clearance from the lowest hanging object! Exit the sketch and create a new sketch ontop of the layout sketch Construct through holes for the motor gearbox and a tap hole for the wheel gear assembly. Add a clearance hole for the motor pinion gear's coupling method Now construct the gearbox plate around the three holes whilst avoiding the clearance hole! CAD Assembly Now put all the components in an assembly and ensure that there are no weird interferences\nPutting the robot together Now print all the parts and put the robot together!!\nElectrical wiring I bus For this project we will be using a certain protocol called I-Bus in order to remotely control our omni car. It is essentially just UART communication. The great thing about it is that it only requires one signal wire to our Arduino and we are able to get data from 10 different channels on our controller! It is extremely easy to use and gives us very fast data with minimal lag.\nThe I Bus pin on the receiver is circled below. (It took me some time to figure out the right one the first time I was doing this lol)\nWiring Wiring the robot in accordance to this fritzing diagram. I reccomend using double sticky tape to mount the electronics.\n(Triple A batteries should actually be double A batteries as they have more capacity)\nSince these are DC motors, you may need to flip the red and black connections if they are spinning the wrong way.\nPairing the receiver and transmitter If the light on the receiver is not a solid, non-blinking red color, with both the receiver and transmitter turned on, then you will need to pair it.\nSteps for pairing Turn receiver and transmitter off Short out the BIND and VCC pin Turn on the receiver (The red light should be blinking really fast) While holding the \u0026quot;BIND KEY\u0026quot; on the transmitter, turn on the transmitter Transmitter should display something like \u0026quot;RX Binding Ok\u0026quot; and the red light on the receiver shouldn't blink Unshort the BIND and VCC pin Uploading the Code Install the I-Bus communication library Tools -\u0026gt; Manage libraries Search for ibus Install the IBusBM library Uploading the actual code Open the omnicar.ino file and upload that code to the arduino.\n","link":"/mechanical/omni-car-project/","section":"mechanical","title":"Omni Car Project"},{"body":"About the Project We will be creating a pcb slip ring that lights up 2 LED lights with a USB C Connector!\nSlip rings are devices that allow electrical contacts through rotating bodies. ![[slipring.gif|350]]\n![[cadslipring.gif]] Usually you would buy things like this, so the question remains, why reinvent the slip ring if it already exists?\nMy excuse was that they're expensive. Over 200$ if you need one with a through hole in the center :(\n![[Pasted image 20220730140802.png]]\nSlip rings are a good way to practice PCB and CAD design. And they kinda cool too\nChallenges Kicad We will be making this with KiCAD, a PCB making software. This will be a very heavy KiCAD tutorial. Later we will be ordering and assembling our PCB ![[Pasted image 20220731135313.png]]\nCAD Very minimal CAD in this lesson. There are only 2 parts that will be needed to be designed.\nCode No Code.\nMaterials PCB Making Mouser account JLCPCB Account Mechanical Snap ring pliers Retaining Rings 1/4\u0026quot; Ball Bearing M4 Grub Screws Assorted M3 Bolts How PCB Design works ![[Pasted image 20220731150317.png]]\nThere are 4 main categories for designing a pcb\nSymbol ![[Pasted image 20220731152202.png|500]] A depiction of a component. Symbols are what you see in a Schematic Footprint ![[Pasted image 20220731152311.png|300]] A depiction of a component for a PCB. They are what you see on a PCB Schematic ![[Pasted image 20220731152433.png|500]] Pictures a collection of symbols and to where they connect to PCB ![[Pasted image 20220731152459.png|500]] Derivated from a schematic Pictures where the components are placed and the traces for each wire [!NOTE] The symbol and the footprint are both associated with an individual component. For instance, a Resistor has a symbol and a footprint associated with it\nSetting up KiCAD Install KiCAD (free and open sourced!) Create a new project The first thing ","link":"/electrical/baby-slip-ring/documentation/instructions/","section":"electrical","title":"PCB Slip Ring Project"},{"body":"Welcome to Envision Hands-On Prototyping, Fabrication and Manufacturing Certificate Mechanical\nElectrical\nEmbedded\nCraft (under construction)\n","link":"/","section":"","title":"HOPFAM Home"}]